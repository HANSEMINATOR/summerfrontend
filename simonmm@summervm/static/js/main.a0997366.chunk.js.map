{"version":3,"sources":["logo.svg","img/home.svg","img/ic-bandit.svg","pages/Overview.js","img/aulogo.png","pages/home.js","pages/notfoundpage.js","pages/Gokarts.js","App.js","index.js"],"names":["Overview","props","websocketUrl","useState","chartData","setChartData","chartXVals","setXVals","chartYVals","setYVals","chartVVals","setVVals","setMqttClient","chart","labels","datasets","label","yAxisID","data","backgroundColor","borderColor","storeError","console","log","useEffect","client","errorHandler","mqtt","connect","stream","on","err","end","getClient","topic","msg","str","String","fromCharCode","apply","strobj","JSON","parse","time","A","V","push","subscribe","Container","maxWidth","color","options","animation","title","text","display","scales","yAxes","id","type","position","xAxes","gridLines","home","Grid","container","direction","justify","alignItems","item","xs","src","AULogo","alt","notfoundpage","Gokarts","topCSS","borderStyle","G1WchartData","setG1WChartData","G1WhchartData","setG1WhChartData","G2WchartData","setG2WChartData","G2WhchartData","setG2WhChartData","chart2XVals","set2XVals","chartG1WYVals","setG1WYVals","chartG1WhYVals","setG1WYhVals","chartG2WYVals","setG2WYVals","chartG2WhYVals","setG2WYhVals","updateG1WChart","updateG1WhChart","updateG2WChart","updateG2WhChart","W","Wh","style","menuDiv","justifyContent","menuText","fontFamily","fontStyle","fontWeight","fontSize","margin","textTransform","opacity","lineHeight","letterSpacing","textAlign","textGboys","marginLeft","mystyle","specialLogo","specialBandit","homeCSS","imgCSS","marginRight","App","yvals","xvals","axios","get","then","res","dataObj","parseInt","value","borderWidth","catch","to","homeLogo","banditLogo","exact","path","component","Home","NotFoundPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0997366.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/home.f7af6e3f.svg\";","export default __webpack_public_path__ + \"static/media/ic-bandit.a21daae9.svg\";","\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport mqtt from \"mqtt\";\r\n//import mqttService from \"./MqttService\";\r\n\r\nfunction Overview(props) {\r\n \r\n  const websocketUrl = \"ws://23.97.200.56:1888\";\r\n  const apiEndpoint = \"/\";\r\n  \r\n  function getClient(errorHandler) {\r\n    const client = mqtt.connect(websocketUrl);\r\n    client.stream.on(\"error\", (err) => {\r\n      errorHandler(`Connection to ${websocketUrl} failed`);\r\n      client.end();\r\n    });\r\n    return client;\r\n  }\r\n  \r\n  function subscribe(client, topic, errorHandler) {\r\n    const callBack = (err, granted) => {\r\n      if (err) {\r\n        errorHandler(\"Subscription request failed\");\r\n      }\r\n    };\r\n    return client.subscribe(apiEndpoint + topic, callBack);\r\n  }\r\n  \r\n  function onMessage(client, callBack) {\r\n    client.on(\"message\", (topic, message, packet) => {\r\n      callBack(JSON.parse(new TextDecoder(\"utf-8\").decode(message)));\r\n    });\r\n  }\r\n  \r\n  function unsubscribe(client, topic) {\r\n    client.unsubscribe(apiEndpoint + topic);\r\n  }\r\n  \r\n  function closeConnection(client) {\r\n    client.end();\r\n  }\r\n\r\n\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    const [chartXVals, setXVals] = useState([]);\r\n    const [chartYVals, setYVals] = useState([]);\r\n    const [chartVVals, setVVals] = useState([]);\r\n\r\n    const [mqttcli, setMqttClient] = useState(null);\r\n\r\n    const chart = () => {\r\n      \r\n      let yvals = [];\r\n      let xvals = [];\r\n      \r\n      //MQTT SUBSCRIBE HER\r\n\r\n      setChartData({\r\n        labels: chartXVals,\r\n        datasets: [\r\n          {\r\n            label: \"Ampere\",\r\n            yAxisID: \"ampere\",\r\n            data: chartYVals,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)',\r\n            \r\n          }, {\r\n            label: \"Voltage\",\r\n            yAxisID: \"volt\",\r\n            data: chartVVals,\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n            borderColor: 'rgba(54, 162, 235, 0.2)',\r\n          }\r\n        ]\r\n      });\r\n\r\n    };\r\n  \r\n    function storeError() {\r\n\r\n      console.log(\"StoreError\");\r\n\r\n    }\r\n\r\n    function handleMessage(msg) {\r\n\r\n      console.log(msg);\r\n      \r\n      let xtemp = [];\r\n\r\n      xtemp.push(parseInt(msg.x));\r\n\r\n      setXVals(msg);\r\n\r\n      chart();\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      //chart();\r\n      /*\r\n      const client = mqttService.getClient(storeError);\r\n      setMqttClient(client);\r\n      const callBack = (mqttMessage) => handleMessage(mqttMessage);\r\n      mqttService.onMessage(client, callBack);\r\n      mqttService.subscribe(client, \"telemetry/gokart1/voltage\", storeError);\r\n      return () => mqttService.closeConnection(client);\r\n      */\r\n\r\n      const client = getClient(storeError);\r\n      setMqttClient(client);\r\n\r\n      client.on(\"connect\", () => {\r\n        console.log(\"connected\");\r\n      })\r\n\r\n      client.on(\"message\", (topic, msg) => {\r\n\r\n        let str = String.fromCharCode.apply(String, msg);\r\n\r\n        console.log(str);\r\n        \r\n        let strobj = JSON.parse(str);\r\n\r\n        //console.log(chartXVals);\r\n        console.log(strobj.time);\r\n        console.log(strobj.A);\r\n        console.log(strobj.V);\r\n        \r\n        chartXVals.push(strobj.time);\r\n\r\n        setXVals(chartXVals);\r\n        \r\n        chartYVals.push(strobj.A);\r\n        setYVals(chartYVals);\r\n\r\n        chartVVals.push(strobj.V);\r\n        setVVals(chartVVals);\r\n        \r\n        chart();\r\n\r\n      });\r\n\r\n      client.subscribe(\"telemetry/gokart1\");\r\n\r\n      \r\n      return function cleanup() {\r\n\r\n        console.log(\"CLEANUP\");\r\n        client.end();\r\n\r\n      }\r\n      \r\n\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n      \r\n      console.log(\"UseEffect\");\r\n\r\n    });\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n      <Container maxWidth=\"xl\" color=\"#4833C4\">\r\n            <p>Overview.js</p>\r\n            \r\n        <Line\r\n          data={chartData}\r\n          options={{\r\n            animation: false,\r\n            title: { text: \"Data monitor\", display: true },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  id: \"ampere\",\r\n                  type: 'linear',\r\n                  position: 'right',\r\n                },\r\n                {\r\n                  id: \"volt\",\r\n                  position: \"left\",\r\n                }\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n\r\n      </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Overview;","export default __webpack_public_path__ + \"static/media/aulogo.bfaab405.png\";","import { Grid } from '@material-ui/core';\n\nimport Container from \"@material-ui/core/Container\";\nimport AULogo from \"../img/aulogo.png\"\n\nfunction home(props) {\n\n    const topCSS = {\n\n        justifyContent : \"center\",\n        alignItems: \"stretch\"\n      \n    }\n\n\n    \n\n    console.log(props);\n\n    return (\n\n        <Container maxWidth=\"xl\" color=\"#4833C4\">\n\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n\n            <Grid item xs={10} justify=\"center\" >\n\n            <p>\n            \n            Velkommen til Aarhus Univesity Campus Herning: https://ingenioer.au.dk/en/student-guidance/find-your-campus/au-campus-herning/\n            \n            På siden her finder i analyse værktøj til jeres Particle Boards i arbejder med i grupperne og de Particles der kommer til at sidde i GoKartsne\n            \n        </p>        \n\n            </Grid>\n\n            <Grid item xs={10} >\n\n                <img src={AULogo} alt=\"AU Logo\"></img>\n\n            </Grid>\n    \n\n        </Grid>\n      </Container>\n            \n    );\n\n}\n\nexport default home;","import React from 'react';\r\n\r\nfunction notfoundpage(props) {\r\n \r\n\r\n    console.log(props);\r\n\r\n    return (\r\n            <p>404 Page Not Found, drop AWP now</p>\r\n    );\r\n\r\n}\r\n\r\nexport default notfoundpage;","import { Grid } from '@material-ui/core';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport mqtt from \"mqtt\";\r\n\r\nfunction Gokarts(props) {\r\n\r\n    const topCSS = {\r\n\r\n        borderStyle: \"dotted\"\r\n\r\n    }\r\n\r\n    const websocketUrl = \"ws://23.97.200.56:1888\";\r\n    const apiEndpoint = \"/\";\r\n\r\n    function storeError() {\r\n\r\n      console.log(\"StoreError\");\r\n\r\n    }\r\n\r\n    function getClient(errorHandler) {\r\n      const client = mqtt.connect(websocketUrl);\r\n      client.stream.on(\"error\", (err) => {\r\n        errorHandler(`Connection to ${websocketUrl} failed`);\r\n        client.end();\r\n      });\r\n      return client;\r\n    }\r\n\r\n    const [mqttcli, setMqttClient] = useState(null);\r\n\r\n    const [G1WchartData, setG1WChartData] = useState({});\r\n    const [G1WhchartData, setG1WhChartData] = useState({});\r\n\r\n    const [G2WchartData, setG2WChartData] = useState({});\r\n    const [G2WhchartData, setG2WhChartData] = useState({});\r\n    \r\n    const [chartXVals, setXVals] = useState([]);\r\n    const [chart2XVals, set2XVals] = useState([]);\r\n\r\n    const [chartG1WYVals, setG1WYVals] = useState([]);\r\n    const [chartG1WhYVals, setG1WYhVals] = useState([]);\r\n    \r\n    const [chartG2WYVals, setG2WYVals] = useState([]);\r\n    const [chartG2WhYVals, setG2WYhVals] = useState([]);\r\n    \r\n\r\n    \r\n    const updateG1WChart = () => {\r\n\r\n    \r\n      setG1WChartData({\r\n        labels: chartXVals,\r\n        datasets: [\r\n          {\r\n            label: \"Watt\",\r\n            data: chartG1WYVals,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)', \r\n          }\r\n        ]\r\n      });\r\n    \r\n    }\r\n\r\n    const updateG1WhChart = () => {\r\n\r\n    \r\n      setG1WhChartData({\r\n        labels: chartXVals,\r\n        datasets: [\r\n          {\r\n            label: \"Watt hours\",\r\n            data: chartG1WhYVals,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)', \r\n          }\r\n        ]\r\n      });\r\n    \r\n    }\r\n\r\n    \r\n    const updateG2WChart = () => {\r\n\r\n    \r\n      setG2WChartData({\r\n        labels: chart2XVals,\r\n        datasets: [\r\n          {\r\n            label: \"Watt\",\r\n            data: chartG2WYVals,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)', \r\n          }\r\n        ]\r\n      });\r\n    \r\n    }\r\n\r\n    const updateG2WhChart = () => {\r\n\r\n    \r\n      setG2WhChartData({\r\n        labels: chart2XVals,\r\n        datasets: [\r\n          {\r\n            label: \"Watt hours\",\r\n            data: chartG2WhYVals,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)', \r\n          }\r\n        ]\r\n      });\r\n    \r\n    }\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n      console.log(\"UseEffect[]\");\r\n\r\n      \r\n      const client = getClient(storeError);\r\n      setMqttClient(client);\r\n      \r\n      updateG1WChart();\r\n      updateG1WhChart();\r\n      updateG2WChart();\r\n      updateG2WhChart();\r\n\r\n      client.on(\"connect\", () => {\r\n        console.log(\"connected\");\r\n      })\r\n\r\n      client.on(\"message\", (topic, msg) => {\r\n\r\n        let str = String.fromCharCode.apply(String, msg);\r\n\r\n        //console.log(str);\r\n        \r\n        let strobj = JSON.parse(str);\r\n\r\n        //console.log(topic);\r\n        //console.log(strobj.time);\r\n        //console.log(strobj.A);\r\n        //console.log(strobj.V);\r\n        \r\n        if(topic == \"telemetry/gokart22\") {\r\n\r\n          console.log(\"Gokart2\");\r\n            \r\n          chart2XVals.push(strobj.time);\r\n\r\n          set2XVals(chart2XVals);\r\n          \r\n          chartG2WYVals.push(strobj.W);\r\n          setG2WYVals(chartG2WYVals);\r\n\r\n          chartG2WhYVals.push(strobj.Wh);\r\n          setG2WYhVals(chartG2WhYVals);\r\n          \r\n          updateG2WChart();\r\n          updateG2WhChart();\r\n\r\n\r\n        }\r\n\r\n        if(topic === \"telemetry/gokart11\") {\r\n\r\n          chartXVals.push(strobj.time);\r\n\r\n          setXVals(chartXVals);\r\n          \r\n          chartG1WYVals.push(strobj.W);\r\n          setG1WYVals(chartG1WYVals);\r\n\r\n          chartG1WhYVals.push(strobj.Wh);\r\n          setG1WYhVals(chartG1WhYVals);\r\n          \r\n          updateG1WChart();\r\n          updateG1WhChart();\r\n\r\n        }\r\n\r\n      });\r\n\r\n      client.subscribe(\"telemetry/gokart11\");\r\n      client.subscribe(\"telemetry/gokart22\");\r\n\r\n      return function cleanup() {\r\n\r\n        console.log(\"CLEANUP\");\r\n        \r\n\r\n      }\r\n      \r\n\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n      \r\n      console.log(\"UseEffect\");\r\n\r\n    });\r\n    \r\n\r\n    console.log(props);\r\n\r\n    return (\r\n\r\n        <Container maxWidth=\"xl\" color=\"#4833C4\">\r\n\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n\r\n            <Grid item container='true'xs={6} justify=\"center\" >\r\n              \r\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={topCSS}>\r\n                <Grid item container='true'xs={6} justify=\"center\" >\r\n\r\n                  <h1>\r\n                  Team 1200W!!\r\n                  </h1> \r\n                  \r\n                </Grid>\r\n                <Grid item container='true'xs={12} justify=\"center\" >\r\n\r\n                <Line\r\n                  data={G1WchartData}\r\n                  options={{\r\n                    animation: false,\r\n                    title: { text: \"W Gokart 1\", display: true },\r\n                    scales: {\r\n                      yAxes: [\r\n                        {\r\n                 \r\n                          type: 'linear',\r\n                          position: 'left',\r\n                        },\r\n                      ],\r\n                      xAxes: [\r\n                        {\r\n                          gridLines: {\r\n                            display: false\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  }}\r\n                />\r\n                \r\n                </Grid>\r\n                <Grid item container='true'xs={12} justify=\"center\" >\r\n\r\n                  <Line\r\n                    data={G1WhchartData}\r\n                    options={{\r\n                      animation: false,\r\n                      title: { text: \"Wh Gokart 1\", display: true },\r\n                      scales: {\r\n                        yAxes: [\r\n                          {\r\n                            type: 'linear',\r\n                            position: 'left',\r\n                          },\r\n                        ],\r\n                        xAxes: [\r\n                          {\r\n                            gridLines: {\r\n                              display: false\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    }}\r\n                  />\r\n\r\n                </Grid>\r\n                \r\n                <Grid item container='true'xs={6} justify=\"center\" >\r\n\r\n                </Grid>\r\n                \r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid item container='true' xs={6} justify=\"center\" >\r\n\r\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={topCSS}>\r\n                <Grid item container='true'xs={6} justify=\"center\" >\r\n\r\n                  <h1>\r\n                  Team 800W!!\r\n                  </h1> \r\n                  \r\n                </Grid>\r\n                <Grid item container='true'xs={12} justify=\"center\" >\r\n\r\n                <Line\r\n                  data={G2WchartData}\r\n                  options={{\r\n                    animation: false,\r\n                    title: { text: \"W Gokart 1200\", display: true },\r\n                    scales: {\r\n                      yAxes: [\r\n                        {\r\n                 \r\n                          type: 'linear',\r\n                          position: 'left',\r\n                        },\r\n                      ],\r\n                      xAxes: [\r\n                        {\r\n                          gridLines: {\r\n                            display: false\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  }}\r\n                />\r\n                \r\n                </Grid>\r\n                <Grid item container='true'xs={12} justify=\"center\" >\r\n\r\n                  <Line\r\n                    data={G2WhchartData}\r\n                    options={{\r\n                      animation: false,\r\n                      title: { text: \"Wh Gokart 1200\", display: true },\r\n                      scales: {\r\n                        yAxes: [\r\n                          {\r\n                            type: 'linear',\r\n                            position: 'left',\r\n                          },\r\n                        ],\r\n                        xAxes: [\r\n                          {\r\n                            gridLines: {\r\n                              display: false\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    }}\r\n                  />\r\n\r\n                </Grid>\r\n                \r\n                <Grid item container='true'xs={6} justify=\"center\" >\r\n\r\n\r\n                </Grid>\r\n                \r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n    \r\n\r\n        </Grid>\r\n      </Container>\r\n            \r\n    );\r\n\r\n}\r\n\r\nexport default Gokarts;","import logo from './logo.svg';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport axios from \"axios\";\nimport homeLogo from \"./img/home.svg\"\nimport banditLogo from \"./img/ic-bandit.svg\"\nimport Overview from './pages/Overview.js';\nimport Home from './pages/home.js';\nimport NotFoundPage from \"./pages/notfoundpage.js\"\nimport './App.css';\nimport Gokarts from './pages/Gokarts';\n\nconst menuDiv = {\n  backgroundColor: \"#FFDBFF\",\n  color: \"#4833C4\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  alignItems: \"center\"\n};\n\nconst menuText = {\n  \n  fontFamily: \"Inconsolata\",\n  fontStyle: \"normal\",\n  fontWeight: \"400\",\n  fontSize: \"22px\",\n  margin: \"10px\",\n  textTransform: \"uppercase\",\n  color: \"#4833C4\",\n  opacity: \"0.8\",  \n  lineHeight: \"23px\",\n  letterSpacing: \"0em\",\n  textAlign: \"center\"\n  \n};\n\nconst textGboys = {\n\n  \n  fontFamily: \"Inconsolata\",\n  fontStyle: \"normal\",\n  fontWeight: \"900\",\n  fontSize: \"32px\",\n  lineHeight: \"34px\",\n  /* identical to box height */\n\n  textAlign: \"center\",\n\n  color: \"#4833C3\",\n  \n  opacity: \"0.7\",\n  margin: \"0px\",\n  marginLeft: \"20px\",\n\n}\n\nconst mystyle = {\n\n  backgroundColor: \"#FFDBFF\"\n\n};\n\nconst specialLogo = {\n\n  backgroundColor: \"#FFDBFF\",\n  display: \"flex\",\n  justifyContent: \"flex-start\",\n  alignItems: \"center\"\n  \n}\n\nconst specialBandit = {\n\n  backgroundColor: \"#FFDBFF\",\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\"\n  \n}\n\nconst homeCSS = {\n\n  backgroundColor: \"#FFDBFF\",\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\"\n\n}\n\nconst imgCSS = {\n\n  margin: \"10px\",\n  marginRight: \"20px\",\n}\n\nfunction App() {\n  \n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let empSal = [];\n    let empAge = [];\n    let yvals = [];\n    let xvals = [];\n    axios\n      .get(\"http://localhost:5000/10mins\")\n      .then(res => {\n        console.log(res);\n        for (const dataObj of res.data) {\n          //empSal.push(parseInt(dataObj.employee_salary));\n          //empAge.push(parseInt(dataObj.employee_age));\n          yvals.push(parseInt(dataObj.value));\n          xvals.push(parseInt(dataObj.time));\n        }\n        setChartData({\n          labels: xvals,\n          datasets: [\n            {\n              label: \"Amps\",\n              data: yvals,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    console.log(empSal, empAge);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  \n  useEffect(() => {\n    console.log(\"UseEffect\");\n  });\n  \n\n  return (\n    \n    <Router>\n      <Grid container direction=\"column\"  maxWidth='false'>\n        <Grid container item xs={12}>\n          <Grid item xs={4} style={specialLogo}>\n            <p style={textGboys}>AU Summer University</p>\n          </Grid>\n          <Grid container item xs={4} style={mystyle} >\n              <Grid item xs={2} style={homeCSS}>\n                <Link to=\"/\">\n                <img src={homeLogo} alt=\"Logo\" style={imgCSS}></img>\n                </Link>      \n              </Grid>\n              <Grid item xs={5} style={menuDiv}>\n                <Link to=\"/overview\">\n                  <p  style={menuText}>Device Overview</p>\n                </Link>\n              </Grid>\n              <Grid item xs={5} style={menuDiv}>\n                  <Link to=\"/gokarts\">\n                  <p  style={menuText}>GoKartsne</p>\n                  </Link>\n              </Grid>\n              \n          </Grid>\n          <Grid item xs={4} style={specialBandit}>\n            <img src={banditLogo} alt=\"Logo\" style={imgCSS}></img>\n          </Grid>\n      </Grid>\n\n      <Grid container direction=\"column\">\n\n      <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/overview' component={Overview} />\n            <Route path='/gokarts' component={Gokarts} />\n            <Route component={NotFoundPage}></Route>\n      </Switch>\n\n      </Grid>\n\n    </Grid>    \n  </Router>\n\n    \n\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}